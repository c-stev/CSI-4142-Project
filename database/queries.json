{
    "Roll Up 1": "SELECT fd.ticker, dd.year, dd.month, AVG(fd.open) AS avg_open, AVG(fd.close) AS avg_close, MAX(fd.high) AS max_high, MIN(fd.low) AS min_low, SUM(fd.volume) AS total_volume FROM fact_stock_analysis fsv JOIN dim_financial fd ON fsv.financial_data_id = fd.financial_data_id JOIN dim_date dd ON fsv.date_id = dd.date_id GROUP BY fd.ticker, dd.year, dd.month;",
    "Roll Up 2": "SELECT code AS country_code, country, EXTRACT(year FROM date) AS year, SUM(population) AS total_population, AVG(gdp) AS average_gdp, AVG(inflation) AS average_inflation, AVG(employment) AS average_employment, AVG(unemployment) AS average_unemployment FROM dim_country GROUP BY code, country, EXTRACT(year FROM date) ORDER BY code, year;",
    "Slice": "SELECT cd.country, cd.date, cd.gdp FROM dim_country cd WHERE cd.code = 'US';",
    "Dice 1": "SELECT fd.date, cd.company FROM fact_stock_analysis fsv JOIN dim_financial fd ON fd.financial_data_id = fsv.financial_data_id JOIN dim_company cd ON cd.company_id = fsv.company_id WHERE cd.ticker = 'AAPL' AND (fd.open - fd.close > 0);",
    "Dice 2": "SELECT fd.ticker, fd.date, fd.open, fd.close, fd.high, fd.low, fd.volume FROM fact_stock_analysis fsv JOIN dim_financial fd ON fd.financial_data_id = fsv.financial_data_id JOIN dim_company cd ON cd.company_id = fsv.company_id JOIN dim_country cod ON cod.country_id = fsv.country_id JOIN dim_date dd ON dd.date_id = fsv.date_id WHERE cd.sector = 'Industrials' AND cod.code = 'US' AND dd.year = 2005 AND dd.quarter = 3;",
    "Combined OLAP 1": "SELECT dd.year, dd.month_string AS month, SUM(fsa.returns) AS total_returns FROM fact_stock_analysis fsa JOIN dim_date dd ON fsa.date_id = dd.date_id JOIN dim_company cd ON fsa.company_id = cd.company_id WHERE cd.sector = 'Health Care' GROUP BY dd.year, dd.month_string ORDER BY total_returns DESC;",
    "Combined OLAP 2": "SELECT cd.country, dd.year, AVG(fsa.volatility) FROM fact_stock_analysis fsa JOIN dim_country cd ON fsa.country_id = cd.country_id JOIN dim_date dd ON fsa.date_id = dd.date_id WHERE cd.code = 'US' GROUP BY cd.country, dd.year;",
    "Combined OLAP 3": "SELECT cd.sector, COUNT(DISTINCT dd.date_id) good_days FROM fact_stock_analysis fsa JOIN dim_company cd ON fsa.company_id = cd.company_id JOIN dim_date dd ON fsa.date_id = dd.date_id WHERE fsa.returns > 0 AND cd.sector IN ('Industrials', 'Materials', 'Telecommunication Services') GROUP BY cd.sector;",
    "Combined OLAP 4": "SELECT cd.sector, SUM(fsa.returns) AS sector_returns FROM fact_stock_analysis fsa JOIN dim_date dd ON fsa.date_id = dd.date_id JOIN dim_company cd ON fsa.company_id = cd.company_id WHERE dd.year = 2018 GROUP BY cd.sector HAVING SUM(fsa.returns) > 0;",
    "Iceberg": "SELECT cd.company, fd.ticker, fsa.returns FROM fact_stock_analysis fsa JOIN dim_financial fd ON fsa.financial_data_id = fd.financial_data_id JOIN dim_date dd ON fsa.date_id = dd.date_id JOIN dim_company cd ON fsa.company_id = cd.company_id WHERE dd.day = 3 AND dd.month = 1 AND dd.year = 2000 ORDER BY fsa.returns DESC LIMIT 10;",
    "Windowing": "SELECT sector, company, ticker, avg_volatility, AVG(avg_volatility) OVER (PARTITION BY sector) AS avg_sector_volatility, RANK() OVER (PARTITION BY sector ORDER BY avg_volatility DESC) AS volatility_rank FROM ( SELECT cd.sector, cd.company, fd.ticker, AVG(fsa.volatility) AS avg_volatility FROM fact_stock_analysis fsa JOIN dim_financial fd ON fsa.financial_data_id = fd.financial_data_id JOIN dim_date dd ON fsa.date_id = dd.date_id JOIN dim_company cd ON fsa.company_id = cd.company_id GROUP BY cd.sector, cd.company, fd.ticker );",
    "Window Clause": "SELECT cd.company, fd.ticker, fd.date, AVG(fsa.returns) OVER(PARTITION BY cd.company ORDER BY fd.date ROWS BETWEEN 29 PRECEDING AND 29 FOLLOWING) as avg_return_30d FROM dim_financial fd JOIN fact_stock_analysis fsa on fsa.financial_data_id = fd.financial_data_id JOIN dim_company cd on fsa.company_id = cd.company_id;"
}
